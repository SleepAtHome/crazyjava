线程相关类 ThreadLocal类：一个线程局部变量，通过把数据放在ThreadLocal中就可以让每个线程创建一个该变量的副本。
               可以避免并发访问的线程安全问题。

通过使用ThreadLocal类可以简化多线程编程时的并发访问，使用这个工具类可以很简洁地隔离多线程程序的竞争资源。

ThreadLocal类作用：为每一个使用该变量的线程都提供一个变量值的副本，使每一个线程都可以独立地改变自己的副本，而不会和其他线程的副本冲突。
                   从线程的角度看，就好像每一个线程都完全拥有该变量一样。

T get()：返回 此线程局部变量中 当前线程副本中的值
void remove()：删除 此线程局部变量中 当前线程的值
void set(T value)：设置 此线程局部变量中 当前线程副本中的值

ThreadLocal将需要并发访问的资源复制多份，每个线程拥有一份资源，每个线程都拥有自己的资源副本，从而也没有必要对该变量进行同步。
ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的整个变量封装进ThreadLocal，或者把该对象与线程相关的状态使用ThreadLocal保存。

ThreadLocal不能替代同步机制，两者面临的问题领域不同。
同步机制：多线程之间通信的有效方式
ThreadLocal：隔离多个线程的数据共享，从根本上避免了多个线程之间对共享资源（变量）的竞争。

通常：
需要共享资源，达到线程之间的通信：使用同步机制。
仅仅需要隔离多个线程之间的共享冲突，使用ThreadLocal。





