16.3 线程的生命周期
5种状态：新建（New）、就绪（Runnable）、运行（Running）、阻塞（Blocked）、死亡（Dead）。

线程会多次在Running、Blocked之间切换。

使用new以后：新建状态，JVM分配内存、初始化成员变量的值，还不会执行线程的执行体。
调用start()方法后：就绪状态，JVM创建方法调用栈、程序计数器，表示可以运行了。（具体什么时候开始运行取决于JVM里线程调度器的调度）。

启动线程用start()不是用run()。

调用run()方法以后，线程就不是新建状态，不能再调用start()方法了。
只能对处于新建状态的线程调用start()方法，否则会有IllegalThreadStateException。

如果希望调用子线程start()方法后子线程立即执行，可以使用Thread.sleep(1)来让当前线程(main)休眠1ms。

以下情况线程将会进入阻塞状态：
- 线程调用sleep()
- 线程调用一个阻塞式IO方法
- 线程试图获得一个同步监视器，但该同步监视器正在被其他线程所持有
- 线程在等待某个通知
- 程序调用了线程的suspend()方法将线程挂起 （该方法容器导致死锁，尽量避免使用）

以下情况可以解除阻塞，进入就绪状态：
- 调用sleep()方法的线程已经过了指定时间
- 线程调用的阻塞式IO方法已返回
- 线程成功获得一个同步监视器
- 线程在等待某个通知时，其他线程发出了一个通知
- 线程挂起状态时被调用了resume()恢复方法

线程会已以下3中方式结束，结束后处于死亡状态：
- run()或call()方法执行完成，线程正常结束
- 线程抛出一个未捕获的Exception或Error
- 直接调用该线程的stop()方法 （该方法容器导致死锁，尽量避免使用）

isAlive()方法：Runnable、Running、Blocked时返回true--New、Dead时返回false。

不要对已死亡的线程调用start()方法。会引发IllegalThreadStateException。