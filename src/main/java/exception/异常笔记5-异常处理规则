异常笔记5-异常处理规则

成功的异常处理应该实现以下4个目标：
- 使程序代码混乱最小化
- 捕获并保留诊断信息
- 通知合适的人员
- 采用合适的方式结束异常活动

10.6.1 不要过度使用异常
过度使用异常的两个方面：
- 把异常和普通错误混在一起，不再编写任何错误处理代码，而是简单的抛出。
- 使用异常来代替流程控制。

对于完全已知的、普通的错误，应该编写处理这种错误的代码。
对外部的、不能确定的、不能预知的运行时错误，使用异常。

不要使用异常处理来代替正常的业务逻辑判断。

10.6.2 不要使用过于庞大的try块
try块特别大时，可能需要跟着大量的catch块。（最好分别捕获）

10.6.3 避免使用catch all语句
catch all语句指的是一种异常捕获模块，它可以处理程序发生的所有可能异常。
e.g. 使用catch(Throwable t) 进行捕获

编写关键程序时应该避免使用这种异常处理方式，有两点不足之处：
- 所有的异常都采用了相同的处理方式，无法对不同的异常分情况处理。
- 可能将程序中的错误、Runtime异常等可能导致程序终止的情况全部捕获到，从而不能发现关键异常。

10.6.4 不要忽略捕获到的异常
- 处理异常。
- 重新抛出异常。
- 在合适的层处理异常。

